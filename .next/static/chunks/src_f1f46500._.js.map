{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/image-card.tsx"],"sourcesContent":["\n\"use client\";\n\nimport Image from 'next/image';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Icons } from '@/components/icons';\nimport type { GeneratedImage } from '@/types/image-types';\n\ninterface ImageCardProps extends GeneratedImage {\n  prompt: string;\n  refinedPrompt?: string | null;\n  onSaveToGallery?: () => void;\n  isSavingToGallery?: boolean;\n}\n\nexport function ImageCard({ url, aspectRatio, resolution, prompt, refinedPrompt, onSaveToGallery, isSavingToGallery }: ImageCardProps) {\n  const handleDownload = () => {\n    const link = document.createElement('a');\n    link.href = url;\n    // Extract file extension from data URI if possible, default to png\n    const mimeTypeMatch = url.match(/^data:(image\\/([a-zA-Z]+));base64,/);\n    const extension = mimeTypeMatch && mimeTypeMatch[2] ? mimeTypeMatch[2] : 'png';\n    link.download = `imagigen_${prompt.substring(0, 20).replace(/\\s+/g, '_') || 'image'}.${extension}`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const [width, height] = resolution.split('x').map(Number);\n\n  return (\n    <Card className=\"overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300 flex flex-col\">\n      <CardHeader>\n        <CardTitle className=\"text-lg\">Aspect: {aspectRatio}</CardTitle>\n        <CardDescription>Resolution: {resolution}</CardDescription>\n      </CardHeader>\n      <CardContent className=\"flex-grow flex items-center justify-center p-0 bg-muted/50\">\n        {url ? (\n          <Image\n            src={url}\n            alt={refinedPrompt || prompt || `Generated image ${aspectRatio} ${resolution}`}\n            width={width || 400} // Provide default if parsing fails\n            height={height || (width ? (width * (aspectRatio === '16:9' ? 9/16 : aspectRatio === '9:16' ? 16/9 : 1)) : 400) }\n            className=\"object-contain max-w-full max-h-96\"\n            data-ai-hint=\"generated art\"\n          />\n        ) : (\n          <div className=\"w-full h-64 bg-gray-200 flex items-center justify-center text-muted-foreground\">\n            <Icons.Image className=\"w-12 h-12\" />\n          </div>\n        )}\n      </CardContent>\n      <CardFooter className=\"flex flex-col sm:flex-row justify-between items-center gap-2 pt-4\">\n        <Button onClick={handleDownload} variant=\"outline\" className=\"w-full sm:w-auto\">\n          <Icons.Download className=\"mr-2 h-4 w-4\" />\n          Download\n        </Button>\n        {onSaveToGallery && (\n          <Button onClick={onSaveToGallery} disabled={isSavingToGallery} className=\"w-full sm:w-auto bg-accent text-accent-foreground hover:bg-accent/90\">\n            {isSavingToGallery ? <Icons.Spinner className=\"mr-2 h-4 w-4\" /> : <Icons.Gallery className=\"mr-2 h-4 w-4\" />}\n            Save to Gallery\n          </Button>\n        )}\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AALA;;;;;;AAeO,SAAS,UAAU,EAAE,GAAG,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,EAAE,aAAa,EAAE,eAAe,EAAE,iBAAiB,EAAkB;IACnI,MAAM,iBAAiB;QACrB,MAAM,OAAO,SAAS,aAAa,CAAC;QACpC,KAAK,IAAI,GAAG;QACZ,mEAAmE;QACnE,MAAM,gBAAgB,IAAI,KAAK,CAAC;QAChC,MAAM,YAAY,iBAAiB,aAAa,CAAC,EAAE,GAAG,aAAa,CAAC,EAAE,GAAG;QACzE,KAAK,QAAQ,GAAG,CAAC,SAAS,EAAE,OAAO,SAAS,CAAC,GAAG,IAAI,OAAO,CAAC,QAAQ,QAAQ,QAAQ,CAAC,EAAE,WAAW;QAClG,SAAS,IAAI,CAAC,WAAW,CAAC;QAC1B,KAAK,KAAK;QACV,SAAS,IAAI,CAAC,WAAW,CAAC;IAC5B;IAEA,MAAM,CAAC,OAAO,OAAO,GAAG,WAAW,KAAK,CAAC,KAAK,GAAG,CAAC;IAElD,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,6LAAC,mIAAA,CAAA,aAAU;;kCACT,6LAAC,mIAAA,CAAA,YAAS;wBAAC,WAAU;;4BAAU;4BAAS;;;;;;;kCACxC,6LAAC,mIAAA,CAAA,kBAAe;;4BAAC;4BAAa;;;;;;;;;;;;;0BAEhC,6LAAC,mIAAA,CAAA,cAAW;gBAAC,WAAU;0BACpB,oBACC,6LAAC,gIAAA,CAAA,UAAK;oBACJ,KAAK;oBACL,KAAK,iBAAiB,UAAU,CAAC,gBAAgB,EAAE,YAAY,CAAC,EAAE,YAAY;oBAC9E,OAAO,SAAS;oBAChB,QAAQ,UAAU,CAAC,QAAS,QAAQ,CAAC,gBAAgB,SAAS,IAAE,KAAK,gBAAgB,SAAS,KAAG,IAAI,CAAC,IAAK,GAAG;oBAC9G,WAAU;oBACV,gBAAa;;;;;yCAGf,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,8HAAA,CAAA,QAAK,CAAC,KAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAI7B,6LAAC,mIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAS;wBAAgB,SAAQ;wBAAU,WAAU;;0CAC3D,6LAAC,8HAAA,CAAA,QAAK,CAAC,QAAQ;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;oBAG5C,iCACC,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAS;wBAAiB,UAAU;wBAAmB,WAAU;;4BACtE,kCAAoB,6LAAC,8HAAA,CAAA,QAAK,CAAC,OAAO;gCAAC,WAAU;;;;;qDAAoB,6LAAC,8HAAA,CAAA,QAAK,CAAC,OAAO;gCAAC,WAAU;;;;;;4BAAkB;;;;;;;;;;;;;;;;;;;AAOzH;KAnDgB","debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { refineImagePrompt as refineImagePromptAI, type RefineImagePromptInput, type RefineImagePromptOutput } from \"@/ai/flows/refine-image-prompt\";\nimport { proposeImageVariations as proposeImageVariationsAI, type ProposeImageVariationsInput, type ProposeImageVariationsOutput } from \"@/ai/flows/propose-image-variations\";\n\nexport async function refinePromptAction(input: RefineImagePromptInput): Promise<RefineImagePromptOutput> {\n  try {\n    const result = await refineImagePromptAI(input);\n    return result;\n  } catch (error) {\n    console.error(\"Error refining prompt:\", error);\n    // It's good practice to not expose raw error messages to the client\n    // For a production app, you might log the error and return a generic message\n    if (error instanceof Error) {\n      throw new Error(`Failed to refine prompt: ${error.message}`);\n    }\n    throw new Error(\"An unknown error occurred while refining the prompt.\");\n  }\n}\n\nexport async function proposeImageVariationsAction(input: ProposeImageVariationsInput): Promise<ProposeImageVariationsOutput> {\n  try {\n    const result = await proposeImageVariationsAI(input);\n    return result;\n  } catch (error) {\n    console.error(\"Error proposing image variations:\", error);\n    if (error instanceof Error) {\n      throw new Error(`Failed to propose image variations: ${error.message}`);\n    }\n    throw new Error(\"An unknown error occurred while proposing image variations.\");\n  }\n}\n"],"names":[],"mappings":";;;;;;IAMsB;IAeA","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-image-generation.ts"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from 'react';\nimport { useToast } from \"@/hooks/use-toast\";\nimport { refinePromptAction, proposeImageVariationsAction } from '@/lib/actions';\nimport type { GeneratedImage } from '@/types/image-types';\nimport type { ProposeImageVariationsOutput } from '@/ai/flows/propose-image-variations';\n\nexport function useImageGeneration() {\n  const [prompt, setPrompt] = useState<string>(\"\");\n  const [refinedPrompt, setRefinedPrompt] = useState<string | null>(null);\n  const [generatedImages, setGeneratedImages] = useState<ProposeImageVariationsOutput>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  const handleGenerateImages = async (currentPrompt: string) => {\n    if (!currentPrompt.trim()) {\n      toast({ title: \"Prompt is empty\", description: \"Please enter a prompt to generate images.\", variant: \"destructive\" });\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    setRefinedPrompt(null);\n    setGeneratedImages([]);\n\n    try {\n      // Step 1: Refine the prompt\n      toast({ title: \"Refining prompt...\", description: \"Our AI is working on making your prompt even better.\" });\n      const refineResult = await refinePromptAction({ prompt: currentPrompt });\n      setRefinedPrompt(refineResult.refinedPrompt);\n      toast({ title: \"Prompt refined!\", description: \"Generating image variations...\" });\n      \n      // Step 2: Propose image variations using the refined prompt\n      const variationsResult = await proposeImageVariationsAction({ prompt: refineResult.refinedPrompt });\n      setGeneratedImages(variationsResult);\n      if (variationsResult.length === 0) {\n        toast({ title: \"No images generated\", description: \"The AI couldn't generate images for this prompt. Try a different one.\", variant: \"default\" });\n      } else {\n         toast({ title: \"Images generated!\", description: \"Your masterpieces are ready.\" });\n      }\n\n    } catch (err) {\n      console.error(\"Image generation failed:\", err);\n      const errorMessage = err instanceof Error ? err.message : \"An unknown error occurred.\";\n      setError(errorMessage);\n      toast({\n        title: \"Generation Failed\",\n        description: errorMessage,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    prompt,\n    setPrompt,\n    refinedPrompt,\n    generatedImages,\n    isLoading,\n    error,\n    handleGenerateImages,\n  };\n}\n"],"names":[],"mappings":";;;AAGA;AACA;AACA;;AAJA;;;;AAQO,SAAS;;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC7C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgC,EAAE;IACvF,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IACpD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,uBAAuB,OAAO;QAClC,IAAI,CAAC,cAAc,IAAI,IAAI;YACzB,MAAM;gBAAE,OAAO;gBAAmB,aAAa;gBAA6C,SAAS;YAAc;YACnH;QACF;QAEA,aAAa;QACb,SAAS;QACT,iBAAiB;QACjB,mBAAmB,EAAE;QAErB,IAAI;YACF,4BAA4B;YAC5B,MAAM;gBAAE,OAAO;gBAAsB,aAAa;YAAuD;YACzG,MAAM,eAAe,MAAM,CAAA,GAAA,wHAAA,CAAA,qBAAkB,AAAD,EAAE;gBAAE,QAAQ;YAAc;YACtE,iBAAiB,aAAa,aAAa;YAC3C,MAAM;gBAAE,OAAO;gBAAmB,aAAa;YAAiC;YAEhF,4DAA4D;YAC5D,MAAM,mBAAmB,MAAM,CAAA,GAAA,wHAAA,CAAA,+BAA4B,AAAD,EAAE;gBAAE,QAAQ,aAAa,aAAa;YAAC;YACjG,mBAAmB;YACnB,IAAI,iBAAiB,MAAM,KAAK,GAAG;gBACjC,MAAM;oBAAE,OAAO;oBAAuB,aAAa;oBAAyE,SAAS;gBAAU;YACjJ,OAAO;gBACJ,MAAM;oBAAE,OAAO;oBAAqB,aAAa;gBAA+B;YACnF;QAEF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,MAAM,eAAe,eAAe,QAAQ,IAAI,OAAO,GAAG;YAC1D,SAAS;YACT,MAAM;gBACJ,OAAO;gBACP,aAAa;gBACb,SAAS;YACX;QACF,SAAU;YACR,aAAa;QACf;IACF;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF;GA1DgB;;QAMI,+HAAA,CAAA,WAAQ","debugId":null}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-image-gallery.ts"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect, useCallback } from 'react';\nimport type { GalleryImage } from '@/types/image-types';\n\nconst GALLERY_STORAGE_KEY = 'imagiGenGallery';\n\nexport function useImageGallery() {\n  const [gallery, setGallery] = useState<GalleryImage[]>([]);\n  const [isGalleryLoaded, setIsGalleryLoaded] = useState(false);\n\n  useEffect(() => {\n    try {\n      const storedGallery = localStorage.getItem(GALLERY_STORAGE_KEY);\n      if (storedGallery) {\n        setGallery(JSON.parse(storedGallery));\n      }\n    } catch (error) {\n      console.error(\"Failed to load gallery from localStorage:\", error);\n      // Optionally clear corrupted storage\n      // localStorage.removeItem(GALLERY_STORAGE_KEY);\n    }\n    setIsGalleryLoaded(true);\n  }, []);\n\n  const saveGallery = useCallback((updatedGallery: GalleryImage[]) => {\n    try {\n      localStorage.setItem(GALLERY_STORAGE_KEY, JSON.stringify(updatedGallery));\n    } catch (error) {\n      console.error(\"Failed to save gallery to localStorage:\", error);\n    }\n  }, []);\n\n  const addImageToGallery = useCallback((image: Omit<GalleryImage, 'id' | 'createdAt'>) => {\n    setGallery(prevGallery => {\n      const newImage: GalleryImage = {\n        ...image,\n        id: Date.now().toString() + Math.random().toString(36).substring(2,9), // Simple unique ID\n        createdAt: new Date().toISOString(),\n      };\n      const updatedGallery = [newImage, ...prevGallery];\n      saveGallery(updatedGallery);\n      return updatedGallery;\n    });\n  }, [saveGallery]);\n\n  const removeImageFromGallery = useCallback((imageId: string) => {\n    setGallery(prevGallery => {\n      const updatedGallery = prevGallery.filter(img => img.id !== imageId);\n      saveGallery(updatedGallery);\n      return updatedGallery;\n    });\n  }, [saveGallery]);\n\n  return { gallery, addImageToGallery, removeImageFromGallery, isGalleryLoaded };\n}\n"],"names":[],"mappings":";;;AAGA;;AAFA;;AAKA,MAAM,sBAAsB;AAErB,SAAS;;IACd,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IACzD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,IAAI;gBACF,MAAM,gBAAgB,aAAa,OAAO,CAAC;gBAC3C,IAAI,eAAe;oBACjB,WAAW,KAAK,KAAK,CAAC;gBACxB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6CAA6C;YAC3D,qCAAqC;YACrC,gDAAgD;YAClD;YACA,mBAAmB;QACrB;oCAAG,EAAE;IAEL,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;oDAAE,CAAC;YAC/B,IAAI;gBACF,aAAa,OAAO,CAAC,qBAAqB,KAAK,SAAS,CAAC;YAC3D,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,2CAA2C;YAC3D;QACF;mDAAG,EAAE;IAEL,MAAM,oBAAoB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;0DAAE,CAAC;YACrC;kEAAW,CAAA;oBACT,MAAM,WAAyB;wBAC7B,GAAG,KAAK;wBACR,IAAI,KAAK,GAAG,GAAG,QAAQ,KAAK,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAE;wBACnE,WAAW,IAAI,OAAO,WAAW;oBACnC;oBACA,MAAM,iBAAiB;wBAAC;2BAAa;qBAAY;oBACjD,YAAY;oBACZ,OAAO;gBACT;;QACF;yDAAG;QAAC;KAAY;IAEhB,MAAM,yBAAyB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;+DAAE,CAAC;YAC1C;uEAAW,CAAA;oBACT,MAAM,iBAAiB,YAAY,MAAM;8FAAC,CAAA,MAAO,IAAI,EAAE,KAAK;;oBAC5D,YAAY;oBACZ,OAAO;gBACT;;QACF;8DAAG;QAAC;KAAY;IAEhB,OAAO;QAAE;QAAS;QAAmB;QAAwB;IAAgB;AAC/E;GAhDgB","debugId":null}},
    {"offset": {"line": 511, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/image-generator-client.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Icons } from '@/components/icons';\nimport { ImageCard } from '@/components/image-card';\nimport { useImageGeneration } from '@/hooks/use-image-generation';\nimport { useImageGallery } from '@/hooks/use-image-gallery';\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { GeneratedImage } from '@/types/image-types';\n\nexport function ImageGeneratorClient() {\n  const {\n    prompt,\n    setPrompt,\n    refinedPrompt,\n    generatedImages,\n    isLoading,\n    error,\n    handleGenerateImages,\n  } = useImageGeneration();\n  const { addImageToGallery } = useImageGallery();\n  const { toast } = useToast();\n  const [savingStates, setSavingStates] = useState<Record<string, boolean>>({});\n\n\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    handleGenerateImages(prompt);\n  };\n\n  const handleSaveToGallery = (image: GeneratedImage, originalPrompt: string, currentRefinedPrompt: string | null) => {\n    const imageId = image.url; // Use URL as a temporary ID for saving state\n    setSavingStates(prev => ({ ...prev, [imageId]: true }));\n    try {\n      addImageToGallery({ ...image, prompt: originalPrompt, refinedPrompt: currentRefinedPrompt || undefined });\n      toast({ title: \"Image saved!\", description: \"The image has been added to your gallery.\" });\n    } catch (err) {\n      toast({ title: \"Save failed\", description: \"Could not save image to gallery.\", variant: \"destructive\" });\n    } finally {\n      setSavingStates(prev => ({ ...prev, [imageId]: false }));\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto max-w-4xl py-8\">\n      <Card className=\"mb-8 shadow-xl\">\n        <CardHeader>\n          <CardTitle className=\"text-3xl font-bold text-center text-primary flex items-center justify-center gap-2\">\n            <Icons.Logo className=\"w-8 h-8\" /> ImagiGen AI\n          </CardTitle>\n          <CardDescription className=\"text-center text-lg\">\n            Turn your text prompts into stunning visuals. Describe your vision, and let our AI bring it to life!\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleFormSubmit} className=\"space-y-6\">\n            <div>\n              <Textarea\n                id=\"prompt\"\n                value={prompt}\n                onChange={(e) => setPrompt(e.target.value)}\n                placeholder=\"e.g., A futuristic cityscape at sunset, synthwave style\"\n                className=\"min-h-[100px] text-base focus:ring-2 focus:ring-primary\"\n                disabled={isLoading}\n                aria-label=\"Image generation prompt\"\n              />\n            </div>\n            <Button type=\"submit\" className=\"w-full text-lg py-6 bg-primary hover:bg-primary/90 text-primary-foreground\" disabled={isLoading}>\n              {isLoading ? (\n                <>\n                  <Icons.Spinner className=\"mr-2 h-5 w-5\" /> Generating...\n                </>\n              ) : (\n                <>\n                  <Icons.Bot className=\"mr-2 h-5 w-5\" /> Generate Images\n                </>\n              )}\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n\n      {isLoading && (\n        <div className=\"text-center my-8\">\n          <Icons.Spinner className=\"h-12 w-12 mx-auto text-primary\" />\n          <p className=\"mt-2 text-lg text-muted-foreground\">Hang tight, magic is happening...</p>\n        </div>\n      )}\n\n      {error && (\n        <Card className=\"my-8 border-destructive bg-destructive/10\">\n          <CardHeader>\n            <CardTitle className=\"text-destructive\">Generation Error</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p>{error}</p>\n          </CardContent>\n        </Card>\n      )}\n\n      {refinedPrompt && !isLoading && (\n        <Card className=\"my-8 bg-secondary/50\">\n          <CardHeader>\n            <CardTitle className=\"text-xl text-secondary-foreground\">Refined Prompt</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"italic text-secondary-foreground/80\">{refinedPrompt}</p>\n          </CardContent>\n        </Card>\n      )}\n\n      {generatedImages.length > 0 && !isLoading && (\n        <div className=\"my-8\">\n          <h2 className=\"text-2xl font-semibold mb-6 text-center text-primary\">Generated Masterpieces</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {generatedImages.map((image, index) => (\n              <ImageCard\n                key={image.url + index} // Data URI can be long, index ensures uniqueness if URLs are somehow same (unlikely)\n                {...image}\n                prompt={prompt}\n                refinedPrompt={refinedPrompt}\n                onSaveToGallery={() => handleSaveToGallery(image, prompt, refinedPrompt)}\n                isSavingToGallery={savingStates[image.url]}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n       {!isLoading && !error && generatedImages.length === 0 && refinedPrompt && (\n         <Card className=\"my-8\">\n           <CardHeader>\n             <CardTitle className=\"text-xl text-center\">Nothing to Show Yet</CardTitle>\n           </CardHeader>\n           <CardContent>\n             <p className=\"text-center text-muted-foreground\">\n                The AI tried its best but couldn&apos;t generate images for the refined prompt: <span className=\"italic\">{refinedPrompt}</span>. \n                Please try a different initial prompt or adjust your current one.\n             </p>\n           </CardContent>\n         </Card>\n       )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAVA;;;;;;;;;;AAaO,SAAS;;IACd,MAAM,EACJ,MAAM,EACN,SAAS,EACT,aAAa,EACb,eAAe,EACf,SAAS,EACT,KAAK,EACL,oBAAoB,EACrB,GAAG,CAAA,GAAA,6IAAA,CAAA,qBAAkB,AAAD;IACrB,MAAM,EAAE,iBAAiB,EAAE,GAAG,CAAA,GAAA,0IAAA,CAAA,kBAAe,AAAD;IAC5C,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA2B,CAAC;IAG3E,MAAM,mBAAmB,CAAC;QACxB,EAAE,cAAc;QAChB,qBAAqB;IACvB;IAEA,MAAM,sBAAsB,CAAC,OAAuB,gBAAwB;QAC1E,MAAM,UAAU,MAAM,GAAG,EAAE,6CAA6C;QACxE,gBAAgB,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,QAAQ,EAAE;YAAK,CAAC;QACrD,IAAI;YACF,kBAAkB;gBAAE,GAAG,KAAK;gBAAE,QAAQ;gBAAgB,eAAe,wBAAwB;YAAU;YACvG,MAAM;gBAAE,OAAO;gBAAgB,aAAa;YAA4C;QAC1F,EAAE,OAAO,KAAK;YACZ,MAAM;gBAAE,OAAO;gBAAe,aAAa;gBAAoC,SAAS;YAAc;QACxG,SAAU;YACR,gBAAgB,CAAA,OAAQ,CAAC;oBAAE,GAAG,IAAI;oBAAE,CAAC,QAAQ,EAAE;gBAAM,CAAC;QACxD;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,6LAAC,mIAAA,CAAA,aAAU;;0CACT,6LAAC,mIAAA,CAAA,YAAS;gCAAC,WAAU;;kDACnB,6LAAC,8HAAA,CAAA,QAAK,CAAC,IAAI;wCAAC,WAAU;;;;;;oCAAY;;;;;;;0CAEpC,6LAAC,mIAAA,CAAA,kBAAe;gCAAC,WAAU;0CAAsB;;;;;;;;;;;;kCAInD,6LAAC,mIAAA,CAAA,cAAW;kCACV,cAAA,6LAAC;4BAAK,UAAU;4BAAkB,WAAU;;8CAC1C,6LAAC;8CACC,cAAA,6LAAC,uIAAA,CAAA,WAAQ;wCACP,IAAG;wCACH,OAAO;wCACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;wCACzC,aAAY;wCACZ,WAAU;wCACV,UAAU;wCACV,cAAW;;;;;;;;;;;8CAGf,6LAAC,qIAAA,CAAA,SAAM;oCAAC,MAAK;oCAAS,WAAU;oCAA6E,UAAU;8CACpH,0BACC;;0DACE,6LAAC,8HAAA,CAAA,QAAK,CAAC,OAAO;gDAAC,WAAU;;;;;;4CAAiB;;qEAG5C;;0DACE,6LAAC,8HAAA,CAAA,QAAK,CAAC,GAAG;gDAAC,WAAU;;;;;;4CAAiB;;;;;;;;;;;;;;;;;;;;;;;;;YAQjD,2BACC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,8HAAA,CAAA,QAAK,CAAC,OAAO;wBAAC,WAAU;;;;;;kCACzB,6LAAC;wBAAE,WAAU;kCAAqC;;;;;;;;;;;;YAIrD,uBACC,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,6LAAC,mIAAA,CAAA,aAAU;kCACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;4BAAC,WAAU;sCAAmB;;;;;;;;;;;kCAE1C,6LAAC,mIAAA,CAAA,cAAW;kCACV,cAAA,6LAAC;sCAAG;;;;;;;;;;;;;;;;;YAKT,iBAAiB,CAAC,2BACjB,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,6LAAC,mIAAA,CAAA,aAAU;kCACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;4BAAC,WAAU;sCAAoC;;;;;;;;;;;kCAE3D,6LAAC,mIAAA,CAAA,cAAW;kCACV,cAAA,6LAAC;4BAAE,WAAU;sCAAuC;;;;;;;;;;;;;;;;;YAKzD,gBAAgB,MAAM,GAAG,KAAK,CAAC,2BAC9B,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAuD;;;;;;kCACrE,6LAAC;wBAAI,WAAU;kCACZ,gBAAgB,GAAG,CAAC,CAAC,OAAO,sBAC3B,6LAAC,sIAAA,CAAA,YAAS;gCAEP,GAAG,KAAK;gCACT,QAAQ;gCACR,eAAe;gCACf,iBAAiB,IAAM,oBAAoB,OAAO,QAAQ;gCAC1D,mBAAmB,YAAY,CAAC,MAAM,GAAG,CAAC;+BALrC,MAAM,GAAG,GAAG;;;;;;;;;;;;;;;;YAWzB,CAAC,aAAa,CAAC,SAAS,gBAAgB,MAAM,KAAK,KAAK,+BACvD,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,6LAAC,mIAAA,CAAA,aAAU;kCACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;4BAAC,WAAU;sCAAsB;;;;;;;;;;;kCAE7C,6LAAC,mIAAA,CAAA,cAAW;kCACV,cAAA,6LAAC;4BAAE,WAAU;;gCAAoC;8CACkC,6LAAC;oCAAK,WAAU;8CAAU;;;;;;gCAAqB;;;;;;;;;;;;;;;;;;;;;;;;AAQ/I;GArIgB;;QASV,6IAAA,CAAA,qBAAkB;QACQ,0IAAA,CAAA,kBAAe;QAC3B,+HAAA,CAAA,WAAQ;;;KAXZ","debugId":null}}]
}